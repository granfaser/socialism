// netlify/functions/news-admin.js
const express = require('express');
const serverless = require('serverless-http');
const jwt = require('jsonwebtoken');
const { getNews, saveNews } = require('./_utils'); // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ—Ç –ø—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π

const JWT_SECRET = process.env.SESSION_SECRET || 'your_very_secret_key_change_this_again_please_really_netlify_jwt';

const app = express();
const router = express.Router();

// Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ JWT
function authenticateToken(req, res, next) {
    const authHeader = req.headers['authorization'];
    const token = authHeader && authHeader.split(' ')[1]; // Bearer TOKEN

    if (token == null) return res.status(401).json({ success: false, message: '–¢–æ–∫–µ–Ω –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω' });

    jwt.verify(token, JWT_SECRET, (err, user) => {
        if (err) return res.status(403).json({ success: false, message: '–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π –∏–ª–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω' });
        
        if (!user || !user.isAdmin) {
             return res.status(403).json({ success: false, message: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤' });
        }
        req.user = user; // –ú–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ req
        next(); // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É, –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω –∏ –µ—Å—Ç—å –ø—Ä–∞–≤–∞
    });
}

app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// --- –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π ---

// POST /admin-api/news - —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –Ω–æ–≤–æ—Å—Ç—å
router.post('/admin-api/news', authenticateToken, async (req, res) => {
    try {
        const { title, content, imageUrl, author } = req.body;
        if (!title || !content) {
            return res.status(400).json({ message: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' });
        }
        const news = await getNews();
        const newArticle = {
            id: Date.now().toString(),
            title,
            content,
            imageUrl: imageUrl || '',
            author: author || '–†–µ–¥–∞–∫—Ü–∏—è',
            publishedDate: new Date().toISOString(),
            reactions: {
                "üëç": 0, "‚ù§Ô∏è": 0, "üòÇ": 0, "üòÆ": 0, "üò¢": 0, "üò†": 0
            }
        };
        news.push(newArticle);
        await saveNews(news); // –ü–æ–º–Ω–∏—Ç–µ: –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ news.json –Ω–µ –±—É–¥—É—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º–∏ –Ω–∞ Netlify
        res.status(201).json(newArticle);
    } catch (error) {
        console.error("Admin API - Error creating news:", error);
        res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏' });
    }
});

// GET /admin-api/news (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –∞–¥–º–∏–Ω–∫–µ –Ω—É–∂–µ–Ω —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π)
// –ï—Å–ª–∏ —ç—Ç–æ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç –Ω—É–∂–µ–Ω, –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ. –ü—É–±–ª–∏—á–Ω—ã–π GET /api/news –µ—Å—Ç—å –≤ news.js
// router.get('/admin-api/news', authenticateToken, async (req, res) => {
//     try {
//         const news = await getNews();
//         news.sort((a, b) => new Date(b.publishedDate) - new Date(a.publishedDate));
//         res.json(news);
//     } catch (error) {
//         console.error("Admin API - Error fetching all news:", error);
//         res.status(500).json({ message: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –∞–¥–º–∏–Ω–∫–∏' });
//     }
// });


// GET /admin-api/news/:id - –ø–æ–ª—É—á–∏—Ç—å –æ–¥–Ω—É –Ω–æ–≤–æ—Å—Ç—å –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
router.get('/admin-api/news/:id', authenticateToken, async (req, res) => {
    try {
        const newsId = req.params.id;
        const news = await getNews();
        const article = news.find(n => n.id === newsId);
        if (article) {
            res.json(article);
        } else {
            res.status(404).json({ message: '–ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' });
        }
    } catch (error) {
        console.error("Admin API - Error fetching news by id:", error);
        res.status(500).json({ message: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è' });
    }
});

// PUT /admin-api/news/:id - –æ–±–Ω–æ–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å
router.put('/admin-api/news/:id', authenticateToken, async (req, res) => {
    try {
        const { id } = req.params;
        const { title, content, imageUrl, author } = req.body;
        let news = await getNews();
        const articleIndex = news.findIndex(article => article.id === id);

        if (articleIndex === -1) {
            return res.status(404).json({ message: '–ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' });
        }

        const updatedArticle = {
            ...news[articleIndex],
            title: title !== undefined ? title : news[articleIndex].title,
            content: content !== undefined ? content : news[articleIndex].content,
            imageUrl: imageUrl !== undefined ? imageUrl : news[articleIndex].imageUrl,
            author: author !== undefined ? author : news[articleIndex].author,
        };
        news[articleIndex] = updatedArticle;
        await saveNews(news); // –ü–æ–º–Ω–∏—Ç–µ: –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ news.json –Ω–µ –±—É–¥—É—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º–∏ –Ω–∞ Netlify
        res.json(updatedArticle);
    } catch (error) {
        console.error("Admin API - Error updating news:", error);
        res.status(500).json({ message: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏' });
    }
});

// DELETE /admin-api/news/:id - —É–¥–∞–ª–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å
router.delete('/admin-api/news/:id', authenticateToken, async (req, res) => {
    try {
        const { id } = req.params;
        let news = await getNews();
        const initialLength = news.length;
        const filteredNews = news.filter(article => article.id !== id);

        if (initialLength === filteredNews.length) {
            return res.status(404).json({ message: '–ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è' });
        }
        await saveNews(filteredNews); // –ü–æ–º–Ω–∏—Ç–µ: –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ news.json –Ω–µ –±—É–¥—É—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º–∏ –Ω–∞ Netlify
        res.status(200).json({ success: true, message: '–ù–æ–≤–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∞' });
    } catch (error) {
        console.error("Admin API - Error deleting news:", error);
        res.status(500).json({ message: '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏' });
    }
});

app.use('/', router); // –ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å –¥–ª—è Netlify Functions –æ–±—ã—á–Ω–æ /
// –ï—Å–ª–∏ Netlify Function –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ /.netlify/functions/news-admin/admin-api/news,
// —Ç–æ router.post('/admin-api/news', ...) —Å—Ä–∞–±–æ—Ç–∞–µ—Ç.

module.exports.handler = serverless(app);