// netlify/functions/news.js
const express = require('express');
const serverless = require('serverless-http');
const { getNews, saveNews } = require('./_utils'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ —É—Ç–∏–ª–∏—Ç—ã

const app = express();
const router = express.Router();

app.use(express.json());

// GET /api/news - –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ –Ω–æ–≤–æ—Å—Ç–∏
router.get('/api/news', async (req, res) => {
    try {
        const news = await getNews();
        news.sort((a, b) => new Date(b.publishedDate) - new Date(a.publishedDate));
        res.json(news);
    } catch (error) {
        res.status(500).json({ message: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π' });
    }
});

// GET /api/news/:id - –ø–æ–ª—É—á–∏—Ç—å –æ–¥–Ω—É –Ω–æ–≤–æ—Å—Ç—å (–¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –≤ news-admin, –Ω–æ –∑–¥–µ—Å—å –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞)
router.get('/api/news/:id', async (req, res) => {
    try {
        const newsId = req.params.id;
        const news = await getNews();
        const article = news.find(n => n.id === newsId);
        if (article) {
            res.json(article);
        } else {
            res.status(404).json({ message: '–ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' });
        }
    } catch (error) {
        res.status(500).json({ message: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–∏' });
    }
});


// POST /api/news/:id/react - –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é
router.post('/api/news/:id/react', async (req, res) => {
    try {
        const newsId = req.params.id;
        const { reaction } = req.body;

        if (!reaction) {
            return res.status(400).json({ message: '–†–µ–∞–∫—Ü–∏—è –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞' });
        }

        let news = await getNews();
        const articleIndex = news.findIndex(n => n.id === newsId);

        if (articleIndex === -1) {
            return res.status(404).json({ message: '–ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' });
        }

        if (!news[articleIndex].reactions) {
            news[articleIndex].reactions = { "üëç": 0, "‚ù§Ô∏è": 0, "üòÇ": 0, "üòÆ": 0, "üò¢": 0, "üò†": 0 };
        }
        if (news[articleIndex].reactions[reaction] === undefined) {
            return res.status(400).json({ message: '–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ç–∏–ø —Ä–µ–∞–∫—Ü–∏–∏' });
        }

        news[articleIndex].reactions[reaction]++;
        await saveNews(news); // –ü–æ–º–Ω–∏–º, —á—Ç–æ —ç—Ç–æ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –Ω–∞–¥–æ–ª–≥–æ
        res.json({ success: true, reactions: news[articleIndex].reactions });

    } catch (error) {
        console.error("Error reacting to news:", error);
        res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–µ–∞–∫—Ü–∏–∏' });
    }
});

app.use('/', router);
module.exports.handler = serverless(app);